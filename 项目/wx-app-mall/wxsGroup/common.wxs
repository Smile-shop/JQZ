var formatNumber = function (n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}

var regYear = getRegExp("(y+)", "i");

var dateFormat = function (timestamp, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  timestamp = parseInt(timestamp);
  var realDate = getDate(timestamp);
  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  // console.log(reg1[0]);
  if (reg1) {

    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];

    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1
        ? v : ("00" + v).substring(("" + v).length));
    }
  }
  return format;
}

var toFix = function(data, val) {
  if (!data) {
    return 0
  }
  var numbers = '';
  for (var i = 0; i < val; i++) {
    numbers += '0'
  }
  var s = 1 + numbers;
  var spot = '.' + numbers;
  var value = Math.round(parseFloat(data) * s) / s;
  var d = value.toString().split(".");
  if (d.length == 1) {
    value = value.toString() + spot;
    return value;
  }
  if (d.length > 1) {
    if (d[1].length < 2) {
      value = value.toString() + "0";
    }
    return value;
  }
}
function cutToFixed(val, type){
  if(!val) return val
  var data =  parseFloat(val).toFixed(2)
  var value = data.split('.')
  return type == 0 ? value[0] + '.' : type == 1 ? value[1] : data
}

function join(val){
  if(val.constructor == 'Array'){
    return val.join(' ')
  }else{
    return val
  }
}

module.exports = {
  dateFormat: dateFormat,
  toFix: toFix,
  cutToFixed: cutToFixed,
  join: join
};